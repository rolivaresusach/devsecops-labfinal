pool:
  vmImage: ubuntu-latest
stages:
  - stage: Build
    jobs:
      - job: build
        displayName: 'Build'
        steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

        - task: CopyFiles@2
          inputs:
              sourceFolder: '$(Build.SourcesDirectory)'
              contents: |
                **/target/*.jar
                **/surefire-reports/*.xml
              targetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishBuildArtifacts@1
          inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: appJar
              publishLocation: 'Container'

  - stage: Test
    jobs:
      - job: Sonar
        workspace:
          clean: all
        displayName: Code Review
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'Sonar'
              organization: 'rolivaresusach'
              projectKey: 'devsecops-labfinal'
              projectName: 'devsecops-labfinal'
            displayName: 'Preparing Sonarqube Environment'

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: true
              isJacocoCoverageReportXML: true
              sqMavenPluginVersionChoice: 'latest'

          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
            displayName: 'Publish Analysis Results'

          - task: sonarcloud-buildbreaker@2
            inputs:
              SonarCloud: 'Sonar'
              organization: 'rolivaresusach'

      - job: SCA
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'appJar'
              downloadPath: '$(Pipeline.Workspace)'
            displayName: Descarga Jar
          - task: dependency-check-build-task@6
            inputs:
              projectName: 'spring-boot-kubernetes'
              scanPath: '$(Pipeline.Workspace)/appJar/target/spring-boot-kubernetes-0.0.1-SNAPSHOT.jar'
              format: 'ALL'
              failOnCVSS: '70'
            displayName: SCA
          - script: |
              pwd
              ls -l $(Pipeline.Workspace)
              nhigh=$(grep ",HIGH," $(Pipeline.Workspace)/TestResults/dependency-check/dependency-check-report.csv | wc -l)
              echo $nhigh "Vulnerabilidades detectadas HIGH en Dependency-check"
              if [ $nhigh -gt 0 ];
              then 
                echo "Se quiebra el pipeline con dependency check detectada" $nhigh " > 0 HIGH Vulnerabilities"
                exit 1;
              fi;
